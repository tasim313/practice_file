"""
Django settings for BamniApi project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path


#celery import
from celery.schedules import crontab
import task.tasks

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-u4z4q+6-!a=e6pj3ca-$8+i6qeh52p(^x@t3xz1!&&9u%50sj%"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["192.168.1.181", "openmrsapi.accelx.net", "127.0.0.1", "192.168.1.247", '192.168.1.180', "192.168.6.109", "192.168.6.110"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "rest_framework",
    "rest_framework.authtoken",
    "djoser",
    "api",
    "accounts",
    'import_export',
    'ckeditor',
    'task',
    'drf_yasg'
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:4200",
    "http://localhost:8000",
    "http://127.0.0.1:9000",
    "http://localhost:4401",
    "http://localhost:4500",
    "http://192.168.1.180:4200",
    "http://192.168.1.210:9001",
    "http://192.168.1.202:9001",
    "http://192.168.1.247:9001",
    "https://naznin-telemedicine.web.app",
    "https://telemed.accelx.net",
    "http://192.168.1.180:9001",
    "http://192.168.6.109:9001",
    "http://192.168.6.110:9001",
]

ROOT_URLCONF = "BamniApi.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "BamniApi.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE"),
        "NAME": os.environ.get("SQL_DATABASE"),
        "USER": os.environ.get("SQL_USER"),
        "PASSWORD": os.environ.get("SQL_PASSWORD"),
        "HOST": os.environ.get("SQL_HOST"),
        "PORT": os.environ.get("SQL_PORT"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [BASE_DIR / "static"]


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


AUTH_USER_MODEL = "accounts.User"



DOMAIN = 'telemed.accelx.net' #example.com
SITE_NAME = 'www.telemed.com' #Example

DJOSER = {
    'PASSWORD_RESET_CONFIRM_URL': 'accounts/password/reset/confirm/{uid}/{token}',
    'USERNAME_RESET_CONFIRM_URL': '#/username/reset/confirm/{uid}/{token}',
    'ACTIVATION_URL': 'accounts/activate/{uid}/{token}',
    'USER_CREATE_PASSWORD_RETYPE': True,
    'SEND_ACTIVATION_EMAIL': False,
    # 'EMAIL': {
    #     'activation': 'dashboard.email.ActivationEmail',
    #     'password_reset': 'dashboard.email.PasswordResetEmail'
    # },
    "SERIALIZERS": {
        "user": "accounts.serializers.CustomUserSerialiser",
        "current_user": "accounts.serializers.CustomUserSerialiser",
    },
}


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": ("rest_framework.authentication.TokenAuthentication",),
}

EMAIL_HOST = "mail.accelx.net"
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = "support@accelx.net"
EMAIL_HOST_PASSWORD = "Accelx@123456"
DEFAULT_FROM_EMAIL = "support@accelx.net"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Bahmni Lab postgressql conection
LAB_POSTGRESQL_USER = "clinlims"
LAB_POSTGRESQL_PASSWORD = ""
LAB_POSTGRESQL_HOST = "192.168.1.180"
LAB_POSTGRESQL_PORT = "5432"
LAB_POSTGRESQL_DATEBASE = "clinlims"

# environment
BAHMNI_API_BASE_URL = os.environ.get("BAHMNI_API_BASE_URL")


PREDICT_MODEL_URL = "http://192.168.1.12:8081/predict"

#Redis Celery Settings

CELERY_BROKER_URL = "redis://redis:6379"
CELERY_RESULT_BACKEND = "redis://redis:6379"
CELERY_TIMEZONE = 'Asia/Dhaka'


CELERY_BEAT_SCHEDULE = {
    "appointment_day_before_email": {
        "task": "task.tasks.appointment_day_before_email",
        # "schedule": crontab(minute='*/3'),
        "schedule": crontab(minute=59, hour=23,),
    },
     "doctor_daily_appointment_notification": {
        "task": "task.tasks.doctor_daily_appointment_notification",
        # "schedule": crontab(minute='*/4'),
        "schedule": crontab(minute=55, hour=23,),
    },
    "assistant_daily_appointment_notification": {
        "task": "task.tasks.assistant_daily_appointment_notification",
        # "schedule": crontab(minute='*/5'),
        "schedule": crontab(minute=58, hour=23,),
    },
}